# Generated by Django 4.2.17 on 2025-01-06 09:51

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('posts', '0001_initial'),
        ('accounts', '0002_alter_customuser_avatar'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicSemester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, null=True)),
                ('days', models.PositiveIntegerField(null=True)),
                ('year', models.PositiveIntegerField(null=True)),
                ('is_current_semester', models.BooleanField(blank=True, default=False, null=True)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('slug', models.CharField(blank=True, max_length=80, unique=True, verbose_name='Slug')),
                ('title', models.CharField(max_length=200)),
                ('title_en', models.CharField(max_length=200, null=True)),
                ('title_fr', models.CharField(max_length=200, null=True)),
                ('title_es', models.CharField(max_length=200, null=True)),
                ('title_ru', models.CharField(max_length=200, null=True)),
                ('code', models.CharField(max_length=20, null=True, unique=True)),
                ('credit', models.IntegerField(default=0, null=True)),
                ('duration_hours', models.PositiveIntegerField(help_text='Estimated time for learning the main parts in hours.')),
                ('duration_weeks', models.PositiveIntegerField(help_text='Duration of the course in weeks.')),
                ('prerequisites', models.TextField(help_text='Requirements for prior subjects or intended audience.')),
                ('keywords', models.TextField(help_text='Comma-separated keywords.')),
                ('abbreviations', models.TextField(blank=True, help_text='List of abbreviations and their meanings.')),
                ('objective', models.TextField(help_text='Purpose or aim of the course.')),
                ('summary', models.TextField(blank=True, help_text='General summary of the course.', max_length=200, null=True)),
                ('summary_en', models.TextField(blank=True, help_text='General summary of the course.', max_length=200, null=True)),
                ('summary_fr', models.TextField(blank=True, help_text='General summary of the course.', max_length=200, null=True)),
                ('summary_es', models.TextField(blank=True, help_text='General summary of the course.', max_length=200, null=True)),
                ('summary_ru', models.TextField(blank=True, help_text='General summary of the course.', max_length=200, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='posts.category')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to=settings.AUTH_USER_MODEL)),
                ('semester', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.academicsemester')),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('slug', models.CharField(blank=True, max_length=80, unique=True, verbose_name='Slug')),
                ('title', models.CharField(max_length=150, unique=True)),
                ('title_en', models.CharField(max_length=150, null=True, unique=True)),
                ('title_fr', models.CharField(max_length=150, null=True, unique=True)),
                ('title_es', models.CharField(max_length=150, null=True, unique=True)),
                ('title_ru', models.CharField(max_length=150, null=True, unique=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('summary_en', models.TextField(blank=True, null=True)),
                ('summary_fr', models.TextField(blank=True, null=True)),
                ('summary_es', models.TextField(blank=True, null=True)),
                ('summary_ru', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-id'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UploadVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('title_en', models.CharField(max_length=100, null=True)),
                ('title_fr', models.CharField(max_length=100, null=True)),
                ('title_es', models.CharField(max_length=100, null=True)),
                ('title_ru', models.CharField(max_length=100, null=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('video', models.FileField(help_text='Valid video formats: mp4, mkv, wmv, 3gp, f4v, avi, mp3', upload_to='course_videos/', validators=[django.core.validators.FileExtensionValidator(['mp4', 'mkv', 'wmv', '3gp', 'f4v', 'avi', 'mp3'])])),
                ('summary', models.TextField(blank=True, null=True)),
                ('summary_en', models.TextField(blank=True, null=True)),
                ('summary_fr', models.TextField(blank=True, null=True)),
                ('summary_es', models.TextField(blank=True, null=True)),
                ('summary_ru', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
            ],
        ),
        migrations.CreateModel(
            name='Upload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('title_en', models.CharField(max_length=100, null=True)),
                ('title_fr', models.CharField(max_length=100, null=True)),
                ('title_es', models.CharField(max_length=100, null=True)),
                ('title_ru', models.CharField(max_length=100, null=True)),
                ('file', models.FileField(help_text='Valid Files: pdf, docx, doc, xls, xlsx, ppt, pptx, zip, rar, 7zip', upload_to='course_files/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'docx', 'doc', 'xls', 'xlsx', 'ppt', 'pptx', 'zip', 'rar', '7zip'])])),
                ('updated_date', models.DateTimeField(auto_now=True, null=True)),
                ('upload_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
            ],
        ),
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('capacity', models.IntegerField(blank=True, default=40, help_text='Enter total number of sits default is set to 40')),
                ('occupied_sits', models.IntegerField(blank=True, default=0, null=True)),
                ('prof', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.professor')),
            ],
        ),
    ]
